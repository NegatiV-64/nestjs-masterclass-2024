generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./database.db"
}

model Event {
  eventId          String   @id @default(uuid()) @map("event_id")
  eventName        String   @map("event_name")
  eventDescription String   @map("event_description")
  eventLocation    String   @map("event_location")
  eventDate        DateTime @map("event_date")
  eventCreatedAt   DateTime @default(now()) @map("event_created_at")
  eventUpdatedAt   DateTime @default(now()) @updatedAt @map("event_updated_at")

  ticket          Ticket[]
}

model User {
  userId        String   @id @default(uuid()) @map("user_id")
  userEmail     String   @unique @map("user_email")
  userFirstName String?  @map("user_first_name")
  userLastName  String?  @map("user_last_name")
  userPassword  String   @map("user_password")
  userRole      String   @default("user") @map("user_role")
  userCreatedAt DateTime @default(now()) @map("user_created_at")
  userUpdatedAt DateTime @default(now()) @updatedAt @map("user_updated_at")

  ticket       Ticket[]
}


model Ticket {
  ticketId            String   @id @default(uuid()) @map("ticket_id")
  ticketQuantity      Int      @map("ticket_quantity")
  ticketPrice         Float    @map("ticket_price")
  ticketStatus        String   @default("pending") @map("ticket_status")
  ticketCreatedAt     DateTime @default(now()) @map("ticket_created_at")
  ticketUpdatedAt     DateTime @default(now()) @updatedAt @map("ticket_updated_at")
  ticketTransactionId String?  @map("ticket_transaction_id")
  ticketEventId       String   @map("ticket_event_id")
  ticketUserId        String   @map("ticket_user_id")

  event Event @relation(fields: [ticketEventId], references: [eventId], onDelete: Cascade)
  user  User  @relation(fields: [ticketUserId], references: [userId], onDelete: Cascade)
}

